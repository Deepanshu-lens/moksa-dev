import{i as p}from"./legacy.BEeXhY1S.js";import{p as d,l as f,a as u,b as m}from"./effects.cxkQmux7.js";import{s as _,a as $}from"./store.c-pxfM0-.js";import{p as s}from"./pb.BjVtZEqq.js";import{s as g}from"./node.CqL_Mp_Y.js";import"./ui.4do1Kz16.js";import{p as a}from"./person-counter.jIMat-6r.js";import"./index.BUf4ql09.js";function z(b,n){d(n,!1);const i=_(),r=()=>$(g,"$selectedNode",i);async function c(){try{s.autoCancellation(!1);const e=await s.collection("personCounter").getFullList({filter:`node="${r()}"`});a.set(e)}catch(e){console.error("Error initializing Person Manager:",e)}}f(()=>(r(),a),()=>{if(r()){s.collection("personCounter").unsubscribe(),c();try{s.collection("personCounter").subscribe("*",e=>{e.action==="create"||e.action==="update"?a.update(o=>{const t=o.findIndex(l=>l.camera===e?.record?.camera);return t!==-1?(o[t]=e?.record,[...o]):[...o,e?.record]}):e.action==="delete"&&a.update(o=>o.filter(t=>t?.id!==e?.record?.id))},{filter:`node?="${r()}"`})}catch{console.error("Failed realtime person")}}}),u(),p(),m()}export{z as default};
